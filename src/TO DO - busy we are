
--------------------------------------------------------------------------------
--------------------- IMMEDIATE  - what is being worked on ---------------------
--------------------------------------------------------------------------------

- library tables playing row style updates no longer refresh on song change sometimes
- remove Layout & LayoutManager cass
- make LayoutMan into widget
- tagger spinner likes spinning forever, teach him
- seeker jerky position animation for short songs, use loop + prediction
- layout mode zoom animation use loop to increase smoothness
- file info animate labels + disable cover adding when empty
- filesize use unsigned long
- config field add checkbox list config field, implement for fileInfo
- implement smooth volume on seek
- custom Log -> logback
- implement flac playback volume consistently with others
  add linear vs logarithmic option
- improve app start+stop speed
- converter add input area & display type of object
- all tables sel + all sel outputs
- make sure OVal  setDefault & deserilization works
- icon any Glyph support
- LastFM -> service
- DB -> service
- global shourtcuts -> service + make sure jintellitype dependency !cause errors
- popups propagate key events!! fix, e.g. usinng ENTER to commit chapter will 
  start playing playlist selected song too...
- make containers & widgets extremely lightweight - all their graphics unite
  into Pane each container overriding the layoutChildren...
- Inspector fix & improve
- seeker option to show chapters as they are passing
- make generic rater control, use in fileinfo
- app animated loading
- tagger add icons to reset and defaults
- cover download subsequently !work - temp file?
- tagger cover loading optimize
- plugin discovery/load
- popover position jumps on app drag start
- support 'infos' - custom tagged extended comments like chapters - figure out
  a good delimiter character - '|' is too common i think
  minimode popups should prevent from autohiding, but how?
- investigate how to properly remove image scaling artifacts
- Code Breaker (.m4a) and Interstellar (.flac) not playing, investigate
- variable bitrate oggs not playing

--------------------------------------------------------------------------------
------------------------ BUGS - what i dont want to hear about -----------------
--------------------------------------------------------------------------------

GENERAL
- cant hide index column, shows artefacts                                       (medium)
- transparent stage causing massive perfomance degradation for larger stages    (major, javaFX bug)
  problem: transparent skins, mouse effects unsupported, windows as node
           implementation impossible
- deactivator position | size a bit off when loading first time & into small    (minor)
  area. It requires area resize call to initialize correct height/y-ccord
  use black bgr on the buttons pane to see the issue
- Enviromment Dektop.browse() doesnt select files in explorer but opens them    (unsolvable?)
- playlist item moving change order when moving fast even for jsut 1 block      (medium-major, investigate)
- backslash (\) shortcut not working for left backslash key (left from Z)       (medium, since more stuff can be affected)
  status: currently unsolvable, so far one of its kind
  problem: jintellitype '\' works only for right '\' not left one (yes there are
  two '\' keys on the keyboard).
- starting paused playback plays the song for an instant                        (medium)
- local shortcuts for complex characters (BACK_SLASH, etc) not working
  solution: solved for some characters by manually rewriting them upon
  shortcut registering, but thats only partial and incomplete workaround
- popup window fullcreen or maximizing(any) breaks popup position               (minor, but should be fixed if possible)
- blurry Configurator graphics in custom3 skin - 99% result of the css warnings (javaFX bug ?)
  this happens when something has null skin, investigate & fix
- Configurator group title alignment doesnt get applied immediately             (minor)
  its partially fixed now
- some songs (happens to be album specific, but specific cause unknown) read    (jaudiotagger bug?)
  length as half of the real one (very irritating bug)
  (dev note: SmilePrecure OST, also a sole bug case)
- when app starts with paused song, playing some other songs starts from that
  point rather than the beginning
- some images with very long names 'can not be found' - it is probably windows
  thing as have experienced problems with long image names before when copying
  the files in windows 
- seeking mp3 files                                                             (major, javaFX bug)
  - track plays after seeker is at the end
  - seeking to the beginning of the track (10-20s) seeks to 0 instead
  - the current time value (and seeker position) is shifted

SOLVED (but the underlying cause still deserves attention)
- reading metadata COMMENT tag field incorrectly reads CUSTOM1 if comment       (medium)
  nonempty.
  solution: custom comment reading method filters out CUSTOM fields             (great)
- split container divider position not applied properly (vertical only).        (medium)
  note: how does orientation come into this: unknown
  solution: have each splitter wait 2 seconds and apply the position again
  problem: arbitrary waiting value might not work in all cases + puttin the
  divider near edge (1 or 0 value) by resizing the Pane will deform the value
  and it doesn retain correct position. Re-applying it doesnt work because of
  this bug. Platform.runLater is the only workaround and it can not be used here
  See the Splitter class for more information
- javafx.scene.text.Text doesnt have css style class and as such doesn allow
  default values and skinning
  solution: Text class extending javafx.scene.text.Text and adding custom 
  styleclass. Use instead of the original if default behavior (skin) is expected
  Also got a nice additional method.
  note: there actually is a styleclass for the Text: .Text
- open PopOvers prevent app to close normally.                                  (medium-major)
  cause: javaFX bug
  solution: Manually close them all when main window closes (introduces some    (good)
  code pollution). Requires static list.
- fullscreen not initializing on window deserialization, update() method bug    (minor)
  cause: unknown                                                                (javafx bug?)
  problem: fullscreen is set, resizability is set to false, the fs hint is shown
  but the window does not cover whole screen - maybe its too soon
  and the window is not really fully initialized
  solution: delay execution 100ms (see WindowBase.update())                     (not ideal but no problems)
- app not closing propery on ALT+F4                                             (medium-major)
  cause: ALT+F4 and closing app from taskbar calling window.closeRequst
  closes focused window not application. It somehow closes windows
  without closing them (close() does not get invoked). Because of this closing
  main window this way doesnt execute the necessary actions. Also, with the
  hidden owner window app wont close as one window remains open
  solution: have onCloseRequest event execute close()
- some local shortucts (F3,F4,F5,...) not registering as app shortcuts          (major)
  cause: unknown, so far affects only some F keys (some F keys are fine)
  solution: delay registering in runLater()                                     (great)
  details: see Action.class register()
- when table selection changes from 2 selected items, the selectedItems()       (major, javaFX bug?)
  list will contain null instead of the newly selected element (the one added, 
  or the one remaining)
  cause: unknown
  solution: iterate over the list with toS() method, this makes no sense, but 
  thats all i know works right now, this is dangerous
  affected: LibraryView filterList(), InfoTable
- Icon does not support disabled style (opacity 0.4). Thus it was added in css. (minor, inconvenience)
  But if set as graphics in MenuBar (and probably in MenuItem and so on) the 
  style gets applied twice! javafx apparently applies the disabled state on the
  graphics on its own!
  workaround: when intended to be used as graphics, call embedded() method
  on the icon. it will set different styleclass disabling the disable style

--------------------------------------------------------------------------------
------------------------ CODE IMPERFECTIONS - what sets off my OCD -------------
--------------------------------------------------------------------------------

UNIFICATIONS, OVERHAULS, REDESIGN, CLEANUP
- item->metadata
- popover investigate default NodeOwner and windowOwner and default move with   
  functionality provided in house by javaFX. I might have reinvented the wheel
  a bit here. It is questionable whether it is worth the effort
- finish nextPlayingItem() & LoopMode thing. Better support with GUI
- clean up classes in Var class hierarchy
- window manager
- window color overlay effect
- tab area
- generic FileType class, particularly need separation on 'groups' like
  audio, video, image, etc...
- unify table column resizing, namely getMain column and autoresize with 
  main column taking all space, maybe signal locked columns with icon and add
  menu item for on/off autoresize columns option



PROTIP:
- util.dev.TODO annotates also bugged code, CTRL+F it throurough the project
- heap: Use -Xmx1g, possibly more
  Large images need more memory. Default heap size WILL cause out of memory
  exceptions for images like 6k x 6k px & closing in on 10MB...

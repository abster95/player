
--------------------------------------------------------------------------------
--------------------- IMMEDIATE  - what is being worked on ---------------------
--------------------------------------------------------------------------------

- converter widget add tagging support
- replaceFirst regex support
- function item nodes dont react on default button click
- config apply on change finish through
- seeker option to show chapters as they are passing  
- tagger disable unsupported fields for type
- config fields unify with item node
- split&join add fixed length and % support
- make generic rater control, use in fileinfo
- minimode implement properly
- unify icons + fluent api
- app animated loading
- tagger add icons to reset and defaults
- cover download subsequently !work - temp file?
- enrich tagging type support  aif? mp4a? etc... + playback support aif?
- other problems with songs from <none> category
- playlist table column resizing and serializing
- app icon
- library edit on add by drag&drop boolean config
- tagger cover loading optimize
- plugin discovery/load
- library view save selection
- popover position jumps when drag starts
- support 'infos' - custom tagged extended comments like chapters - figure out
  a good delimiter character - '|' is too common i think
- popover set arrow location automatically based on available screen space
- minimode implement properly
  bgr stretched, artefact on the right since menu doesnt have bgr
  miniMode autohide add option, clean code, start autohide on window creation
  minimode popups should prevent from autohiding, but how?
- tab area - reimplement
- press C to collapse layout containers easily - implement properly
- clean up Environment + more robust
- Explorer improve
- cut down on experimentals: bookmarks, visualisations, gal.map, color.map, etc
- thumbnail image bound to prefSize causes problems, anchorPane doesn work
- ConfigField (General) disable ok button get rid of

--------------------------------------------------------------------------------
------------------------ BUGS - what i dont want to hear about ------------------
--------------------------------------------------------------------------------

PROTIP:
- util.dev.TODO annotates also bugged code, CTRL+F it throurough the project

GENERAL
- transparent stage causing massive perfomance degradation for larger stages    (major, javaFX bug)
  problem: transparent skins, mouse effects unsupported, windows as node
           implementation impossible
- deactivator position | size a bit off when loading first time & into small    (minor)
  area. It requires area resize call to initialize correct height/y-ccord
  use black bgr on the buttons pane to see the issue
- Enviromment Dektop.browse() doesnt select files in explorer but opens them    (unsolvable?)
- playlist item moving change order when moving fast even for jsut 1 block      (medium-major, investigate)
- backslash (\) shortcut not working for left backslash key (left from Z)       (medium, since more stuff can be affected)
  status: currently unsolvable, so far one of its kind
  problem: jintellitype '\' works only for right '\' not left one (yes there are
  two '\' keys on the keyboard).
- starting playback at given previous position seeks to beginning for a while   (medium)
- local shortcuts for complex characters (BACK_SLASH, etc) not working
  solution: solved for some characters by manually rewriting them upon
  shortcut registering, but thats only partial and incomplete workaround
- popup window fullcreen or maximizing(any) breaks popup position               (minor, but should be fixed if possible)
- tagger verifier causes layout graphics to break when mouse over window border (controlsFX bug)
- blurry Configurator graphics in custom3 skin - 99% result of the css warnings (javaFX bug ?)
  this happens when something has null skin, investigate & fix
- Configurator group title alignment doesnt get applied sometimes               (javaFX bug)
- context menu position sometimes off (even default ones). The cause must be
  its parent Node not initializing size correctly
- some songs (happens to be album specific, but specific cause unknown) read    (jaudiotagger bug)
  length as half of the real one (very irritating bug)
  (dev note: SmilePrecure OST, also a sole bug case)
- when app starts with paused song, playing some other songs starts from that
  point rather than the beginning
- shortut (local & global both) lock needs to be at least 500ms
  holding the shortut fires event every 33ms, however after pressing it, there
  is 500ms pause
  how does one use lock ~ 100ms and blocks the shortcut after those 500ms, but
  doest block another press which could have happened during that time
  solution: have an incrementing sequence unique per shortcut press - this is
  however kinda hard to implement and i dont think its worth the effort
- some images with very long names 'can not be found' - it is probably windows
  thing as have experienced problems with long image names before when copying
  the files in windows 
- seeking mp3 files                                                             (major, javaFX bug)
  - track plays after seeker is at the end
  - seeking to the beginning of the track (10-20s) seeks to 0 instead
  - the current time value (and seeker position) is shifted
- playlist selection quickly changing -> bug in InfoTable text generation       (medium, javaFX bug)
  during summing total duration
- Error: org.jaudiotagger.audio.exceptions.CannotReadException: Unable to read 
  file because it is too small to be valid audio file: O:\music\soundtracks\game
  s\Mass Effect3 (folder)\Wwise_End002_Streaming\Wwise_End002_Streaming.057.ogg 
  Reading metadata failed for file: O:\music\soundtracks\games\Mass Effect3 
  (folder)\Wwise_End002_Streaming\Wwise_End002_Streaming.057.ogg.Corrupt or 
  inaccessible file or data.
- seeker has totaltime null when changing songs very quickly. the root cause    (medium, state inconsistency)
  probably goes to PLAYER.playback. Fixing seeker causes playback incrementer
  failure. So... 


SOLVED (but the underlying cause still deserves attention)
- reading metadata COMMENT tag field incorrectly reads CUSTOM1 if comment       (medium)
  nonempty.
  solution: custom comment reading method filters out CUSTOM fields             (great)
- split container divider position not applied properly (vertical only).        (medium)
  note: how does orientation come into this: unknown
  solution: have each splitter wait 2 seconds and apply the position again
  problem: arbitrary waiting value might not work in all cases + puttin the
  divider near edge (1 or 0 value) by resizing the Pane will deform the value
  and it doesn retain correct position. Re-applying it doesnt work because of
  this bug. Platform.runLater is the only workaround and it can not be used here
  See the Splitter class for more information
- javafx.scene.text.Text doesnt have css style class and as such doesn allow
  default values and skinning
  solution: Text class extending javafx.scene.text.Text and adding custom 
  styleclass. Use instead of the original if default behavior (skin) is expected
  Also got a nice additional method.
  note: there actually is a styleclass for the Text: .Text
- open PopOvers prevent app to close normally.                                  (medium-major)
  cause: javaFX bug
  solution: Manually close them all when main window closes (introduces some    (good)
  code pollution). Requires static list.
- fullscreen not initializing on window deserialization, update() method bug    (minor)
  cause: unknown                                                                (javafx bug?)
  problem: fullscreen is set, resizability is set to false, the fs hint is shown
  but the window does not cover whole screen - maybe its too soon
  and the window is not really fully initialized
  solution: delay execution 100ms (see WindowBase.update())                     (not ideal but no problems)
- app not closing propery on ALT+F4                                             (medium-major)
  cause: ALT+F4 and closing app from taskbar calling window.closeRequst
  closes focused window not application. It somehow closes windows
  without closing them (close() does not get invoked). Because of this closing
  main window this way doesnt execute the necessary actions. Also, with the
  hidden owner window app wont close as one window remains open
  solution: have onCloseRequest event execute close()

--------------------------------------------------------------------------------
------------------------ CODE IMPERFECTIONS - what sets off my OCD -------------
--------------------------------------------------------------------------------

CLEANUP
- Serializator and serialization
- window manager
- window color overlay effect, colr skin change + use song color
  using setStyle on main color
- get rid of layout aggregators
  deserializing and creating windows, or make it into a container?

UNIFICATIONS, OVERHAULS, REDESIGN
- Playback/Player/Playlist state and suspending/restoring them
- file format discovery. Unite Image and Audio types add category               (not needed)
- gui traits add uninstall, put into setters, remove from constructors          (minor, but very desirable and very doable)
- popover investigate default NodeOwner and windowOwner and default move with   
  functionality provided in house by javaFX. I might have reinvented the wheel
  a bit here. It is questionable whether it is worth the effort
- make AppConfigurable and make all managers non static
- finish nextPlayingItem() & LoopMode thing. Better support with GUI
- turn Playlist into full fledget Feature - get rid of the PlaylistManager
  & add support for tables to vind ObservableLists - decision to make
  but fix playlist table need to override sorting method because of this
- onTime events, make sur ethey fire correctly and dont degrade performance

PERFORMANCE
- transparent stage java low FPS bug                                            (major)
- skin memory consumption investigate                                           (medium)

--------------------------------------------------------------------------------
--------- "PERKS" & WHAT ONE SHOULD KNOW ABOUT - the developer traps -----------
--------------------------------------------------------------------------------

- table row heights are fixed
- scrollbar width should be 15px. Or table resize (and more) might break.
- instead of javafx.scene.text.Text use Text class provided by the project. It
  is exactly the same but provides css styleclass and support for skinning. Also
  comes in with a handy resize methods
- real main app window is hidden and owner of the others. this way they share
  some of the state like minimized
- when implementing DragEvent make sure to properly accept the incoming drag
  only when all necessary onditions are met, not always. For example if we
  accept only certain type of files we need to query the dragboard files and see
  whether we should accept or not. The accepting has a visual effect and indicates
  to the user whether the drag can be dropped on the specific Node or now with
  an icon - so it should work reflect the reality.
  Also: try to set the correct TransferMode (COPY | MOVE | ANY) to indicate
  transfer (both accepting and firing event)
  Also: always use setCompleted(true) when drag drops and is handled
- when showing ContextMenu, there is a big difference between show(Window,x,y)
  and (Node,x,y). The former will not hide the menu when next click happens
  within the node itself!